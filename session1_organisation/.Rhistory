shiny::runApp('Desktop/AraNoisy')
runApp('Desktop/AraNoisy')
runApp('Desktop/AraNoisy')
runApp('Desktop/AraNoisy')
getwd()
setwd("/Users/sandra/Desktop/2021_L3_R/organisation_session/")
setwd("/Users/sandra/Desktop/2021_L3_R/session1_organisation/")
- Importez les données dans R:
knitr::opts_chunk$set(echo = TRUE)
ggplot(expt1, aes(blade.length.mm, rosette.leaf.num, colour = genotype)) +
geom_point() +
facet_grid(genotype ~ temperature)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(visdat)
library(plotly)
setwd("~/Desktop/2021_L3_R/session3_plots_manipulation/")
expt1 <- read_tsv("../data/burghardt_et_al_2015_expt1.txt")
# Example de thèmes existants dans ggplot2
ggplot(expt1, aes(genotype, days.to.flower)) +
geom_boxplot() +
theme_bw() +
labs(title = "Black and white theme")
ggplot(expt1, aes(genotype, days.to.flower)) +
geom_boxplot() +
theme_classic() +
labs(title = "Classic theme")
ggplot(expt1, aes(genotype, days.to.flower)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Minimal theme")
ggplot(expt1, aes(genotype, days.to.flower)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(expt1, aes(genotype, days.to.flower, fill = fluctuation)) +
geom_boxplot() +
scale_fill_brewer(palette="Dark2")
ggplot(expt1, aes(blade.length.mm, rosette.leaf.num, colour = genotype)) +
geom_point() +
facet_grid(genotype ~ temperature)
ggplot(expt1, aes(blade.length.mm, rosette.leaf.num, colour = genotype, shape=temperature)) +
geom_point()
ggplot(expt1, aes(blade.length.mm, rosette.leaf.num, colour = genotype)) +
geom_point()
ggplot(expt1, aes(rosette.leaf.nom, rosette.leaf.num, colour = genotype)) +
geom_point()
ggplot(expt1, aes(rosette.leaf.num, rosette.leaf.num, colour = genotype)) +
geom_point()
ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = genotype)) +
geom_point()
```{r}
ggplot(expt1, aes(rosette.leaf.num, days.to.flower, colour = genotype)) +
geom_point()
ggplot(expt1, aes(genotype, days.to.bolt, fill = fluctuation)) +
geom_boxplot() +
facet_grid(day.length ~ temperature)
ggplot(expt1, aes(genotype, days.to.bolt, fill = fluctuation)) +
geom_boxplot() +
facet_grid(day.length ~ temperature) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(gridExtra)
library(gridExtra)
library(gridExtra)
grid.arrange(panelA, panelA, ncol=1, nrow=2)
panelA <- ggplot(expt1, aes(rosette.leaf.num, days.to.flower, colour = genotype)) +
geom_point()
panelB <- ggplot(expt1, aes(genotype, days.to.bolt, fill = fluctuation)) +
geom_boxplot() +
facet_grid(day.length ~ temperature) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
grid.arrange(panelA, panelA, ncol=1, nrow=2)
grid.arrange(panelA, panelB, ncol=1, nrow=2)
grid.arrange(panelA, panelB, ncol=1, nrow=2, heights=c(1,2))
grid.arrange(panelA, panelB, ncol=1, nrow=2, heights=c(2,3))
grid.arrange(panelA, panelB, ncol=1, nrow=2, heights=c(3,4))
grid.arrange(panelA, panelB, ncol=1, nrow=2, heights=c(3,6))
grid.arrange(panelA, panelB, ncol=1, nrow=2, heights=c(5,8))
grid.arrange(panelA, panelB, ncol=1, nrow=2,labels=c("A","B"))
grid.arrange(panelA, panelB, nrow=2, labels=c("A","B"))
grid.arrange(panelA, panelB, nrow=2)
ggarrange(panelA, panelB, nrow=2)
grid.arrange(panelA, panelB, nrow=2)
library(ggpubr)
ggarrange(panelA, panelB, nrow=2)
ggarrange(panelA, panelB, nrow=2, labels =c("A", "B"))
ggarrange(panelA, panelB, nrow=2, labels =c("A", "B"),heights = c(1, 02))
panelA <- ggplot(expt1, aes(rosette.leaf.num, days.to.flower, colour = fluctuation)) +
geom_point()
ggarrange(panelA, panelB, nrow=2, labels =c("A", "B"),heights = c(1, 2))
panelB <- ggplot(expt1, aes(genotype, days.to.bolt, fill = fluctuation)) +
geom_boxplot() +
facet_grid(. ~ temperature) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggarrange(panelA, panelB, nrow=2, labels =c("A", "B"),heights = c(1, 2))
ggarrange(panelA, panelB, nrow=2, labels =c("A", "B"),heights = c(1.5, 2))
library(gganimate)
install.packages("gganimate")
library(gganimate)
panelA <- ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
transition_time(genotype) +
ease_aes('linear')
?anim_save
panelA <- ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
transition_time(genotype) +
ease_aes('linear')
anim_save("test_anime.gif")
install.packages("gifski")
panelA <- ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
transition_time(genotype) +
ease_aes('linear')
anim_save("test_anime.gif")
library(gifski)
panelA <- ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
transition_time(genotype) +
ease_aes('linear')
anim_save("test_anime.gif")
panelA <- ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
transition_time(genotype) +
labs(title = 'Genotype: {genotype}', x = 'Days to flower', y = 'Rosette leaf number') +
ease_aes('linear')
anim_save("test_anime.gif")
ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
transition_time(genotype) +
labs(title = 'Genotype: {genotype}', x = 'Days to flower', y = 'Rosette leaf number') +
ease_aes('linear')
ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
transition_time(genotype) +
labs(title = 'Genotype: {genotype}', x = 'Days to flower', y = 'Rosette leaf number') +
ease_aes('linear') +
transition_states(states = genotype)
anim_save("test_anime.gif")
ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
transition_time(genotype) +
labs(title = 'Genotype: {genotype}', x = 'Days to flower', y = 'Rosette leaf number') +
ease_aes('linear') +
transition_states(states = genotype)
ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
labs(title = 'Genotype: {genotype}', x = 'Days to flower', y = 'Rosette leaf number') +
ease_aes('linear') +
transition_states(states = genotype)
ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()
ggplot(expt1, aes(rosette.leaf.num, days.to.bolt, colour = fluctuation)) +
geom_point()  +
transition_states(states = genotype)
install.packages("av")
